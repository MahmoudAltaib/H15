
Microcontrollers1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000014a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000019e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000019e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001d0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  0000020c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000981  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000063d  00000000  00000000  00000be5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003b2  00000000  00000000  00001222  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  000015d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003a5  00000000  00000000  0000164c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001cb  00000000  00000000  000019f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00001bbc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 39 00 	call	0x72	; 0x72 <main>
  64:	0c 94 a3 00 	jmp	0x146	; 0x146 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <Set_bit>:
{
	cPORT_index &= ~(1<<u8Bit_index);
}

extern void Port_mode( char cPORT_index , uint8_t u8Port_state)
{
  6c:	08 95       	ret

0000006e <Reset_bit>:
  6e:	08 95       	ret

00000070 <Pin_mode>:
		/* Do nothing */
	}
}

extern void Pin_mode( char cPORT_index , uint8_t u8Pin_index , uint8_t u8Pin_state)
{
  70:	08 95       	ret

00000072 <main>:
 */ 
#include "Functions.h"

int main(void)
{
	Pin_mode(DDRD , 5 , OUTPUT);
  72:	81 b3       	in	r24, 0x11	; 17
  74:	41 e0       	ldi	r20, 0x01	; 1
  76:	65 e0       	ldi	r22, 0x05	; 5
  78:	0e 94 38 00 	call	0x70	; 0x70 <Pin_mode>
	Pin_mode(DDRD , 6 , OUTPUT);
  7c:	81 b3       	in	r24, 0x11	; 17
  7e:	41 e0       	ldi	r20, 0x01	; 1
  80:	66 e0       	ldi	r22, 0x06	; 6
  82:	0e 94 38 00 	call	0x70	; 0x70 <Pin_mode>
	Pin_mode(DDRD , 7 , OUTPUT);
  86:	81 b3       	in	r24, 0x11	; 17
  88:	41 e0       	ldi	r20, 0x01	; 1
  8a:	67 e0       	ldi	r22, 0x07	; 7
  8c:	0e 94 38 00 	call	0x70	; 0x70 <Pin_mode>

	
	Reset_bit(PORTD , 5);
  90:	82 b3       	in	r24, 0x12	; 18
  92:	65 e0       	ldi	r22, 0x05	; 5
  94:	0e 94 37 00 	call	0x6e	; 0x6e <Reset_bit>
	Reset_bit(PORTD , 6);
  98:	82 b3       	in	r24, 0x12	; 18
  9a:	66 e0       	ldi	r22, 0x06	; 6
  9c:	0e 94 37 00 	call	0x6e	; 0x6e <Reset_bit>
	Reset_bit(PORTD , 7);
  a0:	82 b3       	in	r24, 0x12	; 18
  a2:	67 e0       	ldi	r22, 0x07	; 7
  a4:	0e 94 37 00 	call	0x6e	; 0x6e <Reset_bit>
	
	while (1)
	{
		Set_bit(PORTD , 5);
  a8:	82 b3       	in	r24, 0x12	; 18
  aa:	65 e0       	ldi	r22, 0x05	; 5
  ac:	0e 94 36 00 	call	0x6c	; 0x6c <Set_bit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b0:	2f ef       	ldi	r18, 0xFF	; 255
  b2:	83 ec       	ldi	r24, 0xC3	; 195
  b4:	99 e0       	ldi	r25, 0x09	; 9
  b6:	21 50       	subi	r18, 0x01	; 1
  b8:	80 40       	sbci	r24, 0x00	; 0
  ba:	90 40       	sbci	r25, 0x00	; 0
  bc:	e1 f7       	brne	.-8      	; 0xb6 <main+0x44>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <main+0x4e>
  c0:	00 00       	nop
		_delay_ms(200);
		Reset_bit(PORTD , 5);
  c2:	82 b3       	in	r24, 0x12	; 18
  c4:	65 e0       	ldi	r22, 0x05	; 5
  c6:	0e 94 37 00 	call	0x6e	; 0x6e <Reset_bit>
  ca:	2f ef       	ldi	r18, 0xFF	; 255
  cc:	83 ec       	ldi	r24, 0xC3	; 195
  ce:	99 e0       	ldi	r25, 0x09	; 9
  d0:	21 50       	subi	r18, 0x01	; 1
  d2:	80 40       	sbci	r24, 0x00	; 0
  d4:	90 40       	sbci	r25, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <main+0x5e>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x68>
  da:	00 00       	nop
		_delay_ms(200);
		
		Set_bit(PORTD , 6);
  dc:	82 b3       	in	r24, 0x12	; 18
  de:	66 e0       	ldi	r22, 0x06	; 6
  e0:	0e 94 36 00 	call	0x6c	; 0x6c <Set_bit>
  e4:	2f ef       	ldi	r18, 0xFF	; 255
  e6:	83 ec       	ldi	r24, 0xC3	; 195
  e8:	99 e0       	ldi	r25, 0x09	; 9
  ea:	21 50       	subi	r18, 0x01	; 1
  ec:	80 40       	sbci	r24, 0x00	; 0
  ee:	90 40       	sbci	r25, 0x00	; 0
  f0:	e1 f7       	brne	.-8      	; 0xea <main+0x78>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <main+0x82>
  f4:	00 00       	nop
		_delay_ms(200);
		Reset_bit(PORTD , 6);
  f6:	82 b3       	in	r24, 0x12	; 18
  f8:	66 e0       	ldi	r22, 0x06	; 6
  fa:	0e 94 37 00 	call	0x6e	; 0x6e <Reset_bit>
  fe:	2f ef       	ldi	r18, 0xFF	; 255
 100:	83 ec       	ldi	r24, 0xC3	; 195
 102:	99 e0       	ldi	r25, 0x09	; 9
 104:	21 50       	subi	r18, 0x01	; 1
 106:	80 40       	sbci	r24, 0x00	; 0
 108:	90 40       	sbci	r25, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <main+0x92>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0x9c>
 10e:	00 00       	nop
		_delay_ms(200);
		
		Set_bit(PORTD , 7);
 110:	82 b3       	in	r24, 0x12	; 18
 112:	67 e0       	ldi	r22, 0x07	; 7
 114:	0e 94 36 00 	call	0x6c	; 0x6c <Set_bit>
 118:	2f ef       	ldi	r18, 0xFF	; 255
 11a:	83 ec       	ldi	r24, 0xC3	; 195
 11c:	99 e0       	ldi	r25, 0x09	; 9
 11e:	21 50       	subi	r18, 0x01	; 1
 120:	80 40       	sbci	r24, 0x00	; 0
 122:	90 40       	sbci	r25, 0x00	; 0
 124:	e1 f7       	brne	.-8      	; 0x11e <main+0xac>
 126:	00 c0       	rjmp	.+0      	; 0x128 <main+0xb6>
 128:	00 00       	nop
		_delay_ms(200);
		Reset_bit(PORTD , 7);
 12a:	82 b3       	in	r24, 0x12	; 18
 12c:	67 e0       	ldi	r22, 0x07	; 7
 12e:	0e 94 37 00 	call	0x6e	; 0x6e <Reset_bit>
 132:	2f ef       	ldi	r18, 0xFF	; 255
 134:	83 ec       	ldi	r24, 0xC3	; 195
 136:	99 e0       	ldi	r25, 0x09	; 9
 138:	21 50       	subi	r18, 0x01	; 1
 13a:	80 40       	sbci	r24, 0x00	; 0
 13c:	90 40       	sbci	r25, 0x00	; 0
 13e:	e1 f7       	brne	.-8      	; 0x138 <main+0xc6>
 140:	00 c0       	rjmp	.+0      	; 0x142 <main+0xd0>
 142:	00 00       	nop
 144:	b1 cf       	rjmp	.-158    	; 0xa8 <main+0x36>

00000146 <_exit>:
 146:	f8 94       	cli

00000148 <__stop_program>:
 148:	ff cf       	rjmp	.-2      	; 0x148 <__stop_program>
