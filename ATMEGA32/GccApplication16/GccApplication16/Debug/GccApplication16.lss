
GccApplication16.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000106  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000015a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000015a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000018c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000070e  00000000  00000000  000001e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000058b  00000000  00000000  000008f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002df  00000000  00000000  00000e81  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001160  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000332  00000000  00000000  00001184  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000168  00000000  00000000  000014b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000161e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 81 00 	jmp	0x102	; 0x102 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
	DDRD |= (1<<5);
  6c:	8d 9a       	sbi	0x11, 5	; 17
	DDRD |= (1<<6);
  6e:	8e 9a       	sbi	0x11, 6	; 17
	DDRD |= (1<<7);
  70:	8f 9a       	sbi	0x11, 7	; 17
	PORTD &= ~(1<<5);
  72:	95 98       	cbi	0x12, 5	; 18
	PORTD &= ~(1<<6);
  74:	96 98       	cbi	0x12, 6	; 18
	PORTD &= ~(1<<7);
  76:	97 98       	cbi	0x12, 7	; 18

	while (1)
	{
		PORTD  |= (1<<PD5);
		_delay_ms(200);
		PORTD ^= (1<<PD5);
  78:	20 e2       	ldi	r18, 0x20	; 32
		_delay_ms(200);
		PORTD |= (1<<PD6);
		_delay_ms(200);
		PORTD ^= (1<<PD6);
  7a:	90 e4       	ldi	r25, 0x40	; 64
	PORTD &= ~(1<<7);
	

	while (1)
	{
		PORTD  |= (1<<PD5);
  7c:	95 9a       	sbi	0x12, 5	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7e:	3f ef       	ldi	r19, 0xFF	; 255
  80:	43 ec       	ldi	r20, 0xC3	; 195
  82:	89 e0       	ldi	r24, 0x09	; 9
  84:	31 50       	subi	r19, 0x01	; 1
  86:	40 40       	sbci	r20, 0x00	; 0
  88:	80 40       	sbci	r24, 0x00	; 0
  8a:	e1 f7       	brne	.-8      	; 0x84 <main+0x18>
  8c:	00 c0       	rjmp	.+0      	; 0x8e <main+0x22>
  8e:	00 00       	nop
		_delay_ms(200);
		PORTD ^= (1<<PD5);
  90:	82 b3       	in	r24, 0x12	; 18
  92:	82 27       	eor	r24, r18
  94:	82 bb       	out	0x12, r24	; 18
  96:	3f ef       	ldi	r19, 0xFF	; 255
  98:	43 ec       	ldi	r20, 0xC3	; 195
  9a:	89 e0       	ldi	r24, 0x09	; 9
  9c:	31 50       	subi	r19, 0x01	; 1
  9e:	40 40       	sbci	r20, 0x00	; 0
  a0:	80 40       	sbci	r24, 0x00	; 0
  a2:	e1 f7       	brne	.-8      	; 0x9c <main+0x30>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <main+0x3a>
  a6:	00 00       	nop
		_delay_ms(200);
		PORTD |= (1<<PD6);
  a8:	96 9a       	sbi	0x12, 6	; 18
  aa:	3f ef       	ldi	r19, 0xFF	; 255
  ac:	43 ec       	ldi	r20, 0xC3	; 195
  ae:	89 e0       	ldi	r24, 0x09	; 9
  b0:	31 50       	subi	r19, 0x01	; 1
  b2:	40 40       	sbci	r20, 0x00	; 0
  b4:	80 40       	sbci	r24, 0x00	; 0
  b6:	e1 f7       	brne	.-8      	; 0xb0 <main+0x44>
  b8:	00 c0       	rjmp	.+0      	; 0xba <main+0x4e>
  ba:	00 00       	nop
		_delay_ms(200);
		PORTD ^= (1<<PD6);
  bc:	82 b3       	in	r24, 0x12	; 18
  be:	89 27       	eor	r24, r25
  c0:	82 bb       	out	0x12, r24	; 18
  c2:	3f ef       	ldi	r19, 0xFF	; 255
  c4:	43 ec       	ldi	r20, 0xC3	; 195
  c6:	89 e0       	ldi	r24, 0x09	; 9
  c8:	31 50       	subi	r19, 0x01	; 1
  ca:	40 40       	sbci	r20, 0x00	; 0
  cc:	80 40       	sbci	r24, 0x00	; 0
  ce:	e1 f7       	brne	.-8      	; 0xc8 <main+0x5c>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <main+0x66>
  d2:	00 00       	nop
		_delay_ms(200);
		PORTD |= (1<<PD7);
  d4:	97 9a       	sbi	0x12, 7	; 18
  d6:	3f ef       	ldi	r19, 0xFF	; 255
  d8:	43 ec       	ldi	r20, 0xC3	; 195
  da:	89 e0       	ldi	r24, 0x09	; 9
  dc:	31 50       	subi	r19, 0x01	; 1
  de:	40 40       	sbci	r20, 0x00	; 0
  e0:	80 40       	sbci	r24, 0x00	; 0
  e2:	e1 f7       	brne	.-8      	; 0xdc <main+0x70>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <main+0x7a>
  e6:	00 00       	nop
		_delay_ms(200);
		PORTD ^= (1<<PD7);
  e8:	82 b3       	in	r24, 0x12	; 18
  ea:	80 58       	subi	r24, 0x80	; 128
  ec:	82 bb       	out	0x12, r24	; 18
  ee:	3f ef       	ldi	r19, 0xFF	; 255
  f0:	43 ec       	ldi	r20, 0xC3	; 195
  f2:	89 e0       	ldi	r24, 0x09	; 9
  f4:	31 50       	subi	r19, 0x01	; 1
  f6:	40 40       	sbci	r20, 0x00	; 0
  f8:	80 40       	sbci	r24, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <main+0x88>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <main+0x92>
  fe:	00 00       	nop
 100:	bd cf       	rjmp	.-134    	; 0x7c <main+0x10>

00000102 <_exit>:
 102:	f8 94       	cli

00000104 <__stop_program>:
 104:	ff cf       	rjmp	.-2      	; 0x104 <__stop_program>
