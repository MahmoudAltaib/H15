
i2cfinal.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ca  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000011e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000011e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000150  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  0000018c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000070b  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005cc  00000000  00000000  000008ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000285  00000000  00000000  00000ebb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  00001140  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000328  00000000  00000000  000011b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000002d  00000000  00000000  000014e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  0000150d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 54 00 	call	0xa8	; 0xa8 <main>
  64:	0c 94 63 00 	jmp	0xc6	; 0xc6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <i2c_init>:
#include <avr/io.h>
#include <i2cfinal.h>

void i2c_init(void)
{
	TWSR=0x00;
  6c:	11 b8       	out	0x01, r1	; 1
	TWBR=0x47;
  6e:	87 e4       	ldi	r24, 0x47	; 71
  70:	80 b9       	out	0x00, r24	; 0
	TWCR=0x04;
  72:	84 e0       	ldi	r24, 0x04	; 4
  74:	86 bf       	out	0x36, r24	; 54
  76:	08 95       	ret

00000078 <i2c_start>:
}
void i2c_start(void)
{
	TWCR=(1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
  78:	84 ea       	ldi	r24, 0xA4	; 164
  7a:	86 bf       	out	0x36, r24	; 54
	while((TWCR&(1<<TWINT))==0);
  7c:	06 b6       	in	r0, 0x36	; 54
  7e:	07 fe       	sbrs	r0, 7
  80:	fd cf       	rjmp	.-6      	; 0x7c <i2c_start+0x4>
}
  82:	08 95       	ret

00000084 <i2c_write>:
void i2c_write(unsigned char A)
{
 TWDR=A;
  84:	83 b9       	out	0x03, r24	; 3
 TWCR=(1<<TWEN)|(1<<TWINT);
  86:	84 e8       	ldi	r24, 0x84	; 132
  88:	86 bf       	out	0x36, r24	; 54
 	while((TWCR&(1<<TWINT))==0);
  8a:	06 b6       	in	r0, 0x36	; 54
  8c:	07 fe       	sbrs	r0, 7
  8e:	fd cf       	rjmp	.-6      	; 0x8a <i2c_write+0x6>
}
  90:	08 95       	ret

00000092 <i2c_stop>:
void i2c_stop()
{
	TWCR=(1<<TWEN)|(1<<TWCR)|(1<<TWSTO);
  92:	26 b7       	in	r18, 0x36	; 54
  94:	81 e0       	ldi	r24, 0x01	; 1
  96:	90 e0       	ldi	r25, 0x00	; 0
  98:	02 c0       	rjmp	.+4      	; 0x9e <i2c_stop+0xc>
  9a:	88 0f       	add	r24, r24
  9c:	99 1f       	adc	r25, r25
  9e:	2a 95       	dec	r18
  a0:	e2 f7       	brpl	.-8      	; 0x9a <i2c_stop+0x8>
  a2:	84 61       	ori	r24, 0x14	; 20
  a4:	86 bf       	out	0x36, r24	; 54
  a6:	08 95       	ret

000000a8 <main>:



   int main(void)
   {
	   i2c_init();
  a8:	0e 94 36 00 	call	0x6c	; 0x6c <i2c_init>
	   i2c_start();
  ac:	0e 94 3c 00 	call	0x78	; 0x78 <i2c_start>
	   i2c_write(0b11010000);
  b0:	80 ed       	ldi	r24, 0xD0	; 208
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	0e 94 42 00 	call	0x84	; 0x84 <i2c_write>
	   i2c_write(0b11110000);
  b8:	80 ef       	ldi	r24, 0xF0	; 240
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	0e 94 42 00 	call	0x84	; 0x84 <i2c_write>
	   i2c_stop();
  c0:	0e 94 49 00 	call	0x92	; 0x92 <i2c_stop>
  c4:	ff cf       	rjmp	.-2      	; 0xc4 <main+0x1c>

000000c6 <_exit>:
  c6:	f8 94       	cli

000000c8 <__stop_program>:
  c8:	ff cf       	rjmp	.-2      	; 0xc8 <__stop_program>
